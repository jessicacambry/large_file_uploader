Please upload your files here.
A confirmation email will be sent to you and to #{@sender_email} when the upload has completed.
Your files will be retained for #{@keep_days} days.

%form.upload-form
  %input#files{multiple: "multiple", name: "files[]", type: "file"}
  %output#list
%script{src: "/js/underscore.js"}

:javascript
  $( document ).ready(function() {

    var multipartMinSize = 5 * 1024 * 1024;
    var maxFileSize      = "#{@max_file_size}";
    var bucket           = "#{$BUCKET}";
    var accessKey        = "#{$AWS_ACCESS_KEY_ID}";
    var awsPolicy        = "#{aws_policy}";
    var awsSignature     = "#{aws_signature}";
    var acl              = "#{$ACL}";

    function Uploader(){
      this.uploadForm = new UploaderForm('.upload-form');
      this.fileQueue = [];

      this.getFiles = function(e){
        e.preventDefault();
        var fileList = e.target.files;  //file list object

        for (var i = 0; i < fileList.length; i++) {
          var file = new File(fileList[i]);
          this.fileQueue.push(file);
          file.sendToAmazon()
        }

      };

      _.bindAll(this, "getFiles");

      this.uploadForm.$fileInput.change(this.getFiles);
    }

    function UploaderForm(el){
      this.$el = $(el);
      this.$fileInput = $('#files');
    }

    function File(file){
      this.htmlFile = file;
      this.name = 'uploads/'+this.htmlFile.name;
      this.size = this.htmlFile.size;

      this.canUseMultipart = function(){
        return this.size > multipartMinSize;
      };

      this.readerCallback = function(e) {
        var fd = new FormData();
        fd.append('key',            this.name);
        fd.append('AWSAccessKeyId', accessKey);
        fd.append('acl',            acl);
        fd.append('policy',         awsPolicy);
        fd.append('signature',      awsSignature);
        fd.append('file',           e.target.result)

        $.ajax({
          url : 'https://s3.amazonaws.com/' + bucket + '/',
          type: 'post',
          data: fd,
          processData: false,
          contentType: false,
          success: function(data) {
            console.log(data);
          }
         });
      }

      this.readFile = function(file, onLoadCallback){
        var reader = new FileReader();
        reader.onload = onLoadCallback;
        reader.readAsBinaryString(file);
      }

      this.sendToAmazon = function(){
        this.readFile(this.htmlFile, this.readerCallback)
      };

      _.bindAll(this, "sendToAmazon", "readFile", "canUseMultipart", "readerCallback");
    }

    new Uploader();
  });